# Generated by Django 2.0.5 on 2018-06-07 09:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='APIData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.TextField(help_text='Enter comma(,) separated keywords')),
                ('available', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'API',
            },
        ),
        migrations.CreateModel(
            name='ApiKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(default='Anonymus', max_length=30)),
                ('website', models.CharField(max_length=30)),
                ('token_key', models.CharField(help_text='Enter the token or Username here', max_length=100)),
                ('token_secret', models.CharField(blank=True, help_text='Enter the Token Secret or Password here', max_length=100)),
                ('consumer_key', models.CharField(blank=True, max_length=100)),
                ('consumer_secret', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='CodeRunner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
                ('username', models.CharField(max_length=10)),
                ('password', models.CharField(max_length=50)),
                ('token', models.CharField(max_length=50)),
                ('api_url', models.URLField()),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='CrawlerData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urls', models.TextField()),
                ('available', models.BooleanField(default=False)),
                ('coderunner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='InternetData.CodeRunner')),
            ],
            options={
                'verbose_name': 'Crawler',
            },
        ),
        migrations.CreateModel(
            name='DataStore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
                ('host', models.CharField(max_length=50)),
                ('port', models.IntegerField()),
                ('username', models.CharField(blank=True, max_length=10)),
                ('password', models.SlugField(blank=True)),
                ('json_info', models.TextField(blank=True, default='{"db":"dbName", "collection":"collection"}')),
                ('active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ScraperData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
                ('xpaths', models.TextField()),
                ('keywords', models.TextField(help_text='Enter comma(,) separated keywords')),
                ('available', models.BooleanField(default=False)),
                ('coderunner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='InternetData.CodeRunner')),
                ('datastore', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='InternetData.DataStore')),
            ],
            options={
                'verbose_name': 'Scraper',
            },
        ),
        migrations.AddField(
            model_name='crawlerdata',
            name='datastore',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='InternetData.DataStore'),
        ),
        migrations.AlterUniqueTogether(
            name='apikey',
            unique_together={('user', 'token_key')},
        ),
        migrations.AddField(
            model_name='apidata',
            name='apikey',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='keys', to='InternetData.ApiKey'),
        ),
        migrations.AddField(
            model_name='apidata',
            name='coderunner',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='InternetData.CodeRunner'),
        ),
        migrations.AddField(
            model_name='apidata',
            name='datastore',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='InternetData.DataStore'),
        ),
    ]
